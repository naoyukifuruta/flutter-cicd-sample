name: Flutter CI

on:
  push:
    branches: [master]
    paths-ignore:
      - "README.md"
      - "analysis_options.yaml"
      - ".gitignore"

  pull_request:
    types: [opened, synchronize]

  workflow_dispatch:

env:
  flutter_version: "3.13.6"

jobs:
  lint:
    name: flutter analyze
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: set up repository
        uses: actions/checkout@v3

      - name: set up flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: "stable"

      - name: flutter version
        run: flutter --version

      - name: flutter pub get
        run: flutter pub get

      - name: flutter analyze
        run: flutter analyze > flutter_analyze_report.txt

      - name: setup ruby
        if: ${{ failure() }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "2.7"

      - name: setup danger
        if: ${{ failure() }}
        run: |
          gem install bundler
          bundle install

      - name: execute danger
        if: ${{ failure() }}
        uses: MeilCli/danger-action@v5
        with:
          plugins_file: "Gemfile"
          install_path: "vendor/bundle"
          danger_file: "Dangerfile"
          danger_id: "danger-pr"
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  android:
    name: build android
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: set up repository
        uses: actions/checkout@v3

      - name: set up flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: "stable"

      - name: flutter version
        run: flutter --version

      - name: flutter pub get
        run: flutter pub get

      - name: flutter build
        run: flutter build appbundle --debug

  ios:
    name: build ios
    runs-on: macos-latest
    needs: lint
    steps:
      - name: set up repository
        uses: actions/checkout@v3

      - name: set up flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: "stable"

      - name: flutter version
        run: flutter --version

      - name: flutter pub get
        run: flutter pub get

      - name: flutter build
        run: flutter build ios --debug --no-codesign

  test:
    name: flutter test
    needs: [android, ios]
    runs-on: ubuntu-latest
    steps:
      - name: set up repository
        uses: actions/checkout@v3

      - name: set up flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: "stable"

      - name: flutter version
        run: flutter --version

      - name: flutter pub get
        run: flutter pub get

      - name: flutter test
        run: flutter test --machine > test_report.log

      - name: test report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: 'flutter test report'
          path: 'test_report.log'
          reporter: 'flutter-json'
          fail-on-error: 'false'
